name: Build and deploy container app to Azure Web App - FlaskDockerForPrac  
  
on:  
  push:  
    branches:  
      - main  
  workflow_dispatch:  
  
jobs:  
  build:  
    runs-on: 'ubuntu-latest'  
  
    steps:  
    - uses: actions/checkout@v2  
  
    - name: Set up Docker Buildx  
      uses: docker/setup-buildx-action@v2  
  
    - name: Log in to registry  
      uses: docker/login-action@v2  
      with:  
        registry: https://iwanttopractice.azurecr.io/  
        username: ${{ secrets.AzureAppService_ContainerUsername_b664662d3a7b43de9e00f1b0010d79b6 }}  
        password: ${{ secrets.AzureAppService_ContainerPassword_a2b97d12aa134e4290e2478d35c80f85 }}  
  
    - name: Build and push container image to registry  
      id: build-and-push  
      uses: docker/build-push-action@v3  
      with:  
        push: true  
        tags: iwanttopractice.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_b664662d3a7b43de9e00f1b0010d79b6 }}/fim:${{ steps.get-sha.outputs.sha }}  
        file: ./Dockerfile  
  
    - id: get-sha  
      run: echo "::set-output name=sha::${GITHUB_SHA}"  
  
  deploy:  
    runs-on: ubuntu-latest  
    needs: build  
    environment:  
      name: 'production'  
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}  
  
    steps:  
    - name: Deploy to Azure Web App  
      id: deploy-to-webapp  
      uses: azure/webapps-deploy@v2  
      with:  
        app-name: 'FlaskDockerForPrac'  
        slot-name: 'production'  
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_3f87f7f7dfd04e64b138fdff2f575d9f }}  
        images: 'iwanttopractice.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_b664662d3a7b43de9e00f1b0010d79b6 }}/fim:${{ steps.get-sha.outputs.sha }}'  
